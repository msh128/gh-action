name: "Launch Ubuntu from docker images"
on:
  workflow_dispatch:
    inputs:
      desktop-env:
        type: choice
        description: Select desktop environment
        options:
        - xubuntu-core
        - kde-plasma-desktop
        - cinnamon
        - ubuntu-mate-core
        - lubuntu-desktop
env:
  DEBIAN_FRONTEND: noninteractive
  TZ: Asia/Jakarta
  NTFY: ${{ secrets.NTFY }}
  SSH_J_USERNAME: ${{ secrets.SSH_J_USERNAME }}
  SSH_J_HOSTNAME: ${{ secrets.SSH_J_HOSTNAME }}
  GH_TOKEN: ${{ secrets.GH_PAT }}
jobs:
  launch_instance:
    runs-on: ubuntu-latest
    container:
      image: ghcr.io/msh128/ubuntu-docker:${{ inputs.desktop-env }}
      options: --user 1000 --device /dev/fuse --tmpfs /tmp --tmpfs /run -v /sys/fs/cgroup:/sys/fs/cgroup:ro --cap-add SYS_ADMIN --privileged
      credentials:
        username: ${{ github.actor }}
        password: ${{ env.GH_TOKEN }}
    steps:
      - name: Launch ${{ inputs.desktop-env }}
        shell: bash
        run: |
          container_start () {
            echo "$GH_TOKEN" > /home/ubuntu/.gh-token && chmod 600 /home/ubuntu/.gh-token && chown 1000:1000 /home/ubuntu/.gh-token
            sudo apt update
            sudo apt -qq full-upgrade -y
            sudo service dbus start
            [ -f /etc/gdm3/custom.conf ] && sed -i 's/^#.*WaylandEnable=.*/WaylandEnable=false/' /etc/gdm3/custom.conf || true
            sudo systemctl start sshd srv.us ssh-j cloudflared ttyd -vvvvv
            sudo systemctl start rclone-mounts -vvvvv
            sudo systemctl start config-sync -vvvvv
            sudo systemctl start qbittorrent-nox teldrive teldrive-webdav novnc -vvvvv
            sudo systemctl start alist pgadmin4 prowlarr filebrowser -vvvvv
            sudo systemctl start vncserver -vvvvv
          }
          container_start && echo "All good." || echo "Something's wrong"
          curl -s -d "$(bash /home/ubuntu/.config/info.sh)" ntfy.sh/$NTFY > /dev/null 2>&1
      - name: Wait for stop signals
        shell: bash
        run: |
          for a in {1..340}; do echo "Random GUID: $(curl -s https://www.uuidgenerator.net/api/guid)" && sleep 58; done &
          while [ ! -f /tmp/poweroff ]; do sleep 3; done
          echo Stop signal received
          echo Stopping services
          stop_services () {
            sudo systemctl stop vncserver novnc -vvvv
            sudo systemctl stop qbittorrent-nox teldrive teldrive-webdav -vvvv
            sudo systemctl stop alist pgadmin4 prowlarr filebrowser -vvvv
            sudo systemctl stop rclone-mounts -vvvv
            sudo systemctl stop config-sync -vvvv
          }
          stop_services && echo Services stopped sucesfully || echo "Something's wrong"
          exit
