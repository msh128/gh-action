name: "Launch Ubuntu"
on:
  workflow_dispatch:
    inputs:
      desktop-env:
        type: choice
        description: Select desktop environment
        options:
        - xubuntu-core
        - kde-plasma-desktop
        - cinnamon
        - ubuntu-mate-core
        - lubuntu-desktop
        - ubuntu-desktop-minimal
env:
  DEBIAN_FRONTEND: noninteractive
  TZ: Asia/Jakarta
  NTFY: ${{ secrets.NTFY }}
  SSH_J_USERNAME: ${{ secrets.SSH_J_USERNAME }}
  SSH_J_HOSTNAME: ${{ secrets.SSH_J_HOSTNAME }}
  GH_REPO_TOKEN: ${{ secrets.github_token }}
jobs:
  launch_instance:
    runs-on: ubuntu-latest
    steps:
      - name: Restore apt packages from Action cache
        uses: awalsh128/cache-apt-pkgs-action@latest
        with:
          packages: accountsservice aspnetcore-runtime-6.0 aspnetcore-runtime-7.0 aspnetcore-targeting-pack-6.0 aspnetcore-targeting-pack-7.0 bash bluez cgroup-tools dbus-x11 docutils-common dotnet-apphost-pack-6.0 dotnet-apphost-pack-7.0 dotnet-hostfxr-6.0 dotnet-runtime-6.0 dotnet-runtime-7.0 dotnet-targeting-pack-6.0 dotnet-targeting-pack-7.0 exo-utils ffmpeg fonts-ubuntu fonts-urw-base35 ghostscript gtk2-engines-pixbuf i965-va-driver ieee-data inotify-tools intel-media-va-driver lib32gcc-s1 lib32stdc++6 libaacs0 libaccountsservice0 libasound2-plugins libass9 libasyncns0 libavc1394-0 libavcodec58 libavdevice58 libavfilter7 libavformat58 libavutil56 libbdplus0 libbluray2 libbs2b0 libcaca0 libcdio-cdda2 libcdio-paranoia2 libcdio19 libcgroup1 libchromaprint-tools libchromaprint1 libcodec2-1.0 libdc1394-25 libdecor-0-0 libdecor-0-plugin-1-cairo libdouble-conversion3 libdvdread8 libebml5 libegl-mesa0 libegl1 libevdev2 libexo-2-0 libexo-common libfftw3-single3 libfile-readbackwards-perl libflac8 libflite1 libfmt8 libgme0 libgs9-common libgs9 libgsm1 libgstreamer-plugins-base1.0-0 libidn12 libiec61883-0 libigdgmm12 libijs-0.35 libimagequant0 libimobiledevice6 libinotifytools0 libinput-bin libinput10 libjack-jackd2-0 libjbig2dec0 liblilv-0-0 liblttng-ust-common1 liblttng-ust-ctl5 liblttng-ust1 libmatroska7 libmfx1 libmp3lame0 libmpg123-0 libmtdev1 libmysofa1 libnl-route-3-200 libnotify4 libobjc4 libopenal-data libopenal1 libopenmpt0 libopus0 liborc-0.4-0 libpcsclite1 libplist3 libpocketsphinx3 libpoppler118 libpostproc55 libpugixml1v5 libpulse-mainloop-glib0 libpulse0 libpulsedsp libqt5core5a libqt5dbus5 libqt5network5 libqt5sql5-sqlite libqt5sql5 libqt5xml5 libraqm0 libraw1394-11 librubberband2 libsamplerate0 libsdl2-2.0-0 libserd-0-0 libshine3 libsnapd-glib1 libsndfile1 libsndio7.0 libsord-0-0 libsoxr0 libspeex1 libspeexdsp1 libsphinxbase3 libsratom-0-0 libsrt1.4-gnutls libssh-gcrypt-4 libstartup-notification0 libswresample3 libswscale5 libtheora0 libtorrent-rasterbar2.0 libtwolame0 libudfread0 libupower-glib3 libusbmuxd6 libva-drm2 libva-x11-2 libva2 libvdpau1 libvidstab1.1 libvorbisenc2 libvpx7 libvte-2.91-0 libvte-2.91-common libwacom-common libwacom9 libwebrtc-audio-processing1 libx264-163 libxcb-shape0 libxcb-util1 libxcvt0 libxfce4ui-2-0 libxfce4ui-common libxfce4util-bin libxfce4util-common libxfce4util7 libxfconf-0-3 libxv1 libxvidcore4 libxxf86dga1 libzimg2 libzvbi-common libzvbi0 linux-cloud-tools-common linux-libc-dev linux-tools-common mesa-va-drivers mesa-vdpau-drivers modemmanager ncdu netstandard-targeting-pack-2.1 novnc ocl-icd-libopencl1 pocketsphinx-en-us podman poppler-data postgresql-client pulseaudio pulseaudio-utils python3-dateutil python3-debtcollector python3-deprecated python3-docutils python3-iso8601 python3-jwcrypto python3-monotonic python3-msgpack python3-netaddr python3-novnc python3-numpy python3-olefile python3-oslo.config python3-oslo.context python3-oslo.i18n python3-oslo.log python3-oslo.serialization python3-oslo.utils python3-packaging python3-pbr python3-pil python3-pyinotify python3-rfc3986 python3-roman python3-stevedore python3-websockify python3-wrapt qbittorrent-nox qttranslations5-l10n rename sgml-base tigervnc-common tigervnc-standalone-server tigervnc-tools tigervnc-xorg-extension udisks2 upower va-driver-all vdpau-driver-all vim vim-common vim-runtime vim-tiny websockify wpasupplicant x11-utils x11-xserver-utils xcvt xfce4-terminal xfconf xfonts-base xfonts-encodings xfonts-utils xml-core xserver-xorg xserver-xorg-core xserver-xorg-input-all xserver-xorg-input-libinput xserver-xorg-video-dummy xxd
          version: 1.0
      - name: Setup SSH key
        uses: webfactory/ssh-agent@v0.9.0
        with: 
          ssh-private-key: |
            ${{ secrets.PRIVATE_KEY_3 }}
      - name: Preparing ${{ inputs.desktop-env }}
        run: |
          git clone git@github.com:msh128/ubuntu-docker.git
          setup_env_and_files () {
            apt -qq update
            apt -qq full-upgrade
            apt -qq install -y aria2 curl dbus-x11 ffmpeg fuse3 htop inotify-tools jq less libchromaprint-tools mediainfo mkvtoolnix nano ncdu novnc openssh-client openssh-server parallel postgresql-client python3-pip python3-websockify qbittorrent-nox rename sudo sqlite3 tigervnc-standalone-server tigervnc-xorg-extension tmux tzdata unzip xfce4-terminal xserver-xorg-video-dummy
            case ${{ inputs.desktop-env }} in
              xubuntu-core|ubuntu-mate-core) apt -qq install -y ${{ inputs.desktop-env }}^;;
              lubuntu-desktop) apt -qq install -y ${{ inputs.desktop-env }} --no-install-recommends;;
              *) apt -qq install -y ${{ inputs.desktop-env }};;
            esac &
            pip install yt-dlp udocker &
            curl -s https://rclone.org/install.sh | bash &
            curl -sL -o /usr/local/bin/ttyd $(curl -s 'https://api.github.com/repos/tsl0922/ttyd/releases/latest' | jq -r '.assets[] | select(.name|contains("x86_64")).browser_download_url')
            mkdir -p /opt/teldrive
            curl -sL $(curl -s 'https://api.github.com/repos/divyam234/teldrive/releases/latest' | jq -r '.assets[] | select(.name|contains("linux-amd64")).browser_download_url') | tar xz -C /opt/teldrive teldrive && curl -sLO $(curl -s 'https://api.github.com/repos/divyam234/rclone/releases/latest' | jq -r '.assets[] | select(.name|contains("linux-amd64.zip")).browser_download_url')
            unzip -qq rclone-*.zip
            mv rclone-*/rclone* /opt/teldrive/
            rm -rf rclone-*
            curl -sL 'https://prowlarr.servarr.com/v1/update/master/updatefile?os=linux&runtime=netcore&arch=x64' | tar xz -C /opt
            chmod a+x /usr/local/bin/ttyd /opt/teldrive/teldrive /opt/teldrive/rclone /opt/Prowlarr/Prowlarr
            adduser --disabled-password --gecos '' ubuntu
            adduser ubuntu sudo
            echo 'ubuntu ALL=(ALL) NOPASSWD: ALL' >> /etc/sudoers
            su - ubuntu -c 'udocker pull xhofe/alist:latest && udocker create --name=alist xhofe/alist:latest; udocker pull dpage/pgadmin4:latest && udocker create --name=pgadmin4 dpage/pgadmin4:latest' &
            mkdir -p /mnt/{musahi0128,drive,drive1}
            su - ubuntu -c 'mkdir -p /home/ubuntu/{Desktop,Documents,Music,Pictures,Videos,Downloads}'
            mv -v ubuntu-docker/systemd/* /etc/systemd/system/
            rclone move -L ubuntu-docker/home /home/ubuntu
            chown ubuntu:ubuntu -R /mnt /opt/teldrive /opt/Prowlarr /home/ubuntu
            chmod 600 /home/ubuntu/.ssh/*
            wait
            [ -f /etc/gdm3/custom.conf ] && sed -i 's/^#.*WaylandEnable=.*/WaylandEnable=false/' /etc/gdm3/custom.conf || true
            sed -i 's/tigervncconfig -iconic/#tigervncconfig -iconic/g' /etc/X11/Xtigervnc-session
          }
          sudo bash -c "$(declare -f setup_env_and_files); setup_env_and_files"
      - name: Launch instance
        run: |
          container_start () {
            echo "$GH_REPO_TOKEN" > /home/ubuntu/.gh-repo-token && chmod 600 /home/ubuntu/.gh-repo-token && chown ubuntu:ubuntu /home/ubuntu/.gh-repo-token
            sudo systemctl start sshd srv.us ssh-j ttyd
            sudo systemctl start rclone-mounts
            sudo systemctl start alist pgadmin4 prowlarr
            sudo systemctl start qbittorrent-nox teldrive teldrive-webdav config-sync
            sudo systemctl start vncserver novnc
          } > /dev/null 2>&1
          ntfy_message () {
            echo Ubuntu on GitHub Action
            echo ""
            echo Connect via srv.us:
            sudo journalctl -u srv.us -g 'https://' -o cat --no-pager
            echo ""
            echo Connect via ssh-j.com:
            echo "ssh ${SSH_J_USERNAME}@ssh-j.com -N -L 127.0.4.1:22:${SSH_J_HOSTNAME}:22 -L 127.0.4.1:7681:${SSH_J_HOSTNAME}:7681 -L 127.0.4.1:8081:${SSH_J_HOSTNAME}:8081 -L 127.0.4.1:9696:${SSH_J_HOSTNAME}:9696 -L 127.0.4.1:8082:${SSH_J_HOSTNAME}:8082 -L 127.0.4.1:8083:${SSH_J_HOSTNAME}:8083 -L 127.0.4.1:5432:${SSH_J_HOSTNAME}:5432 -L 127.0.4.1:5244:${SSH_J_HOSTNAME}:5244 -L 127.0.4.1:5901:${SSH_J_HOSTNAME}:5901 -L 127.0.4.1:6080:${SSH_J_HOSTNAME}:6080"
          }
          container_start && echo "All good." || echo "Something's wrong"
          curl -s -d "$(ntfy_message)" ntfy.sh/$NTFY > /dev/null 2>&1
      - name: Wait for stop signals
        shell: bash
        run: |
          for a in {1..330}; do echo "Random GUID: $(curl -s https://www.uuidgenerator.net/api/guid)" && sleep 58; done &
          while [ ! -f /tmp/poweroff ]; do sleep 3; done
          echo Stop signal received
          echo Stopping services
          stop_services () {
            sudo systemctl stop vncserver novnc
            sudo systemctl stop qbittorrent-nox teldrive teldrive-webdav
            sudo systemctl stop alist pgadmin4 prowlarr
            sudo systemctl stop rclone-mounts
            sudo systemctl stop config-sync
          }
          stop_services && echo Services stopped sucesfully || echo "Something's wrong"
          exit
