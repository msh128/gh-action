name: "Ubuntu"
on:
  workflow_dispatch:
    inputs:
      desktop-env:
        type: choice
        description: Select desktop environment
        options:
        - xubuntu-core
        - kde-plasma
        - cinnamon
env:
  DEBIAN_FRONTEND: noninteractive
  TZ: Asia/Jakarta
  NTFY: ${{ secrets.NTFY }}
  SSH_J_USERNAME: ${{ secrets.SSH_J_USERNAME }}
  SSH_J_HOSTNAME: ${{ secrets.SSH_J_HOSTNAME }}
jobs:
  launch_instance:
    runs-on: ubuntu-latest
    container:
      image: ghcr.io/msh128/ubuntu-docker:${{ inputs.desktop-env }}
      options: --user 1000 --device /dev/fuse --cap-add SYS_ADMIN --privileged
      credentials:
        username: ${{ github.actor }}
        password: ${{ secrets.github_token }}
    steps:
      - name: Launch instance
        shell: bash
        run: |
          container_start () {
            sudo apt update
            sudo apt -yqq full-upgrade
            if [[ ! "$1" == "debug" ]]
            then
              sudo systemctl start sshd srv.us ssh-j ttyd
              sudo systemctl start rclone-mounts
              sudo systemctl start alist pgadmin4 prowlarr
              sudo systemctl start qbittorrent-nox teldrive teldrive-webdav
              sudo systemctl start config-sync
              sudo systemctl start vncserver novnc
            else
              sudo systemctl start srv.us ssh-j ttyd
            fi
          } > /dev/null 2>&1
          ntfy_message () {
            echo Ubuntu on GitHub Action
            echo ""
            echo Connect via srv.us:
            sudo journalctl -u srv.us --no-pager | grep ': https'
            echo ""
            echo Connect via ssh-j.com:
            echo "ssh ${SSH_J_USERNAME}@ssh-j.com -N -L 127.0.4.1:22:${SSH_J_HOSTNAME}:22 -L 127.0.4.1:7681:${SSH_J_HOSTNAME}:7681 -L 127.0.4.1:8081:${SSH_J_HOSTNAME}:8081 -L 127.0.4.1:9696:${SSH_J_HOSTNAME}:9696 -L 127.0.4.1:8082:${SSH_J_HOSTNAME}:8082 -L 127.0.4.1:8083:${SSH_J_HOSTNAME}:8083 -L 127.0.4.1:5432:${SSH_J_HOSTNAME}:5432 -L 127.0.4.1:5244:${SSH_J_HOSTNAME}:5244 -L 127.0.4.1:5901:${SSH_J_HOSTNAME}:5901 -L 127.0.4.1:6080:${SSH_J_HOSTNAME}:6080"
          }
          container_start && echo "All good." || echo "Something's wrong"
          curl -s -d "$(ntfy_message)" ntfy.sh/$NTFY > /dev/null 2>&1
      - name: Wait for stop signals
        shell: bash
        run: |
          container_stop () {
            echo Stop signal received, stopping services
            sudo systemctl stop vncserver novnc
            sudo systemctl stop qbittorrent-nox teldrive teldrive-webdav
            sudo systemctl stop alist pgadmin4 prowlarr
            sudo systemctl stop rclone-mounts
            sudo systemctl stop config-sync
            echo Services stopped sucesfully
            exit
          }
          for a in {1..6900}; do [ -f /tmp/poweroff ] && container_stop || sleep 3; done
